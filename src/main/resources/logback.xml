<configuration>

    <include resource="org/springframework/boot/logging/logback/base.xml" />

    <springProperty name="logPath" source="app.log.path"/>
    <springProperty name="logPattern" source="app.log.pattern"/>
    <springProperty name="slackUrl" source="app.log.slack.webhook-url"/>
    <springProperty name="slackEnabled" source="app.log.slack.enabled"/>
    <springProperty name="restEnabled" source="app.log.rest.enabled"/>
    <springProperty name="restHostName" source="app.log.rest.host"/>
    <springProperty name="restRequestParamName" source="app.log.rest.request-param-name"/>

    <!-- profile 단위 설정 : application-{profile}.properties 파일에 정의된 것이 우선시 됨-->
    <springProfile name="local | development">
        <logger name="org.springframework.jdbc" level="DEBUG"/>
        <logger name="org.springframework.web.servlet" level="DEBUG"/>
        <logger name="jdbc" level="debug"/>
        <logger name="jdbc.sqlonly" level="debug"/>
        <logger name="jdbc.sqltiming" level="debug"/>
        <logger name="jdbc.audit" level="debug"/>
        <logger name="jdbc.resultset" level="debug"/>
        <logger name="jdbc.resultsettable" level="debug"/>
        <logger name="jdbc.connection" level="debug"/>
    </springProfile>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${logPattern}</pattern>
        </encoder>
    </appender>

    <appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath:-/logs/app}/app.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logPath:-/logs/app}/bak/app.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${logPattern}</pattern>
        </encoder>
    </appender>

    <appender name="ROLLING_FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath:-/logs/app}/app-error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logPath:-/logs/app}/bak/app.%d{yyyy-MM-dd}-error.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${logPattern}</pattern>
        </encoder>
    </appender>

    <!-- slack 채널에 경고 로그 보내기 -->
   <appender name="SLACK" class="com.github.maricn.logback.SlackAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${logPattern}</pattern>
        </layout>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
        <webhookUri>${slackUrl}</webhookUri>
        <colorCoding>true</colorCoding>
    </appender>

    <appender name="ASYNC_SLACK" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="SLACK"/>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
    </appender>

    <!-- 커스텀 appender-->
    <appender name="REST_LOG" class="com.yamdeng.template.common.RestLogAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${logPattern}</pattern>
        </layout>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
        <hostName>${restHostName}</hostName>
        <requestParamName>${restRequestParamName}</requestParamName>
    </appender>

    <appender name="ASYNC_REST" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="REST_LOG"/>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
    </appender>

    <logger name="org.springframework.jdbc" level="debug"/>
    <logger name="org.springframework.web.servlet" level="debug"/>

    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ROLLING_FILE"/>
        <appender-ref ref="ROLLING_FILE_ERROR"/>
        <if condition='property("slackEnabled").equals("true")'>
            <then>
                <appender-ref ref="SLACK"/>
            </then>
        </if>
        <if condition='property("restEnabled").equals("true")'>
            <then>
                <appender-ref ref="ASYNC_REST"/>
            </then>
        </if>
    </root>

</configuration>