<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yamdeng.template.data.dao.CommuteDao">

	<!-- OFFICE_COMMUTE_DAY(출퇴근_일일) 테이블 -->

	<!-- OFFICE_COMMUTE_DAY select column -->
	<sql id="commute_select">
		a.base_date_str                                           AS base_date_str /* 근태기준일 */
		,a.user_id                                                AS user_id /* 직원ID */
		,a.start_work_date                                        AS start_work_date /* 최초출근시간 */
		,a.out_work_date                                          AS out_work_date /* 최초퇴근시간 */
		,a.final_start_work_date                                  AS final_start_work_date /* 최종출근시간 */
		,a.final_out_work_date                                    AS final_out_work_date /* 최종퇴근시간 */
		,a.start_work_ip                                          AS start_work_ip /* 출근IP */
		,a.out_work_ip                                            AS out_work_ip /* 퇴근IP */
		,a.outside_work_yn                                        AS outside_work_yn /* 외근여부 */
		,a.work_status_code                                       AS work_status_code /* 근무상태 */
		,a.work_result_code                                       AS work_result_code /* 근무결과 */
		,a.vacation_kind_code                                     AS vacation_kind_code /* 휴가종류 */
		,fn_get_code_label('WORK_STATUS', a.work_status_code)     AS work_status_code_name /* 근무상태코드명 */
		,fn_get_code_label('WORK_RESULT', a.work_result_code)     AS work_result_code_name /* 근무결과코드명 */
		,fn_get_code_label('VACATION_KIND', a.vacation_kind_code) AS vacation_kind_code_name /* 휴가종류코드명 */
		,a.etc_description                                        AS etc_description /* 기타설명 */
		,a.mod_yn                                                 AS mod_yn /* 수정여부 */
		,a.tardy_yn                                               AS tardy_yn /* 지각여부 */
		,a.worked_time_value                                      AS worked_time_value /* 근무시간 */
		<include refid="com.yamdeng.template.data.dao.CommonDao.common_select"/>
		<include refid="com.yamdeng.template.data.dao.CommonDao.user_common_select"/>
	</sql>

	<!-- 목록 where 조건 -->
	<sql id="commute_list_where">
		<if test='baseDateStr != null and !baseDateStr.equals("")'>
			AND a.base_date_str = #{baseDateStr}
		</if>
		<if test='userId != null and !userId.equals("")'>
			AND a.user_id = #{userId}
		</if>
		<if test='deptKey != null and !deptKey.equals("")'>
			AND d.dept_key = #{deptKey}
		</if>
		<if test='workStatusCode != null and !workStatusCode.equals("Y")'>
			AND a.work_status_code = #{workStatusCode}
		</if>
		<if test='tardyYn != null and !tardyYn.equals("Y")'>
			AND a.tardy_yn = 'Y'
		</if>
		<if test='vacationYn != null and !vacationYn.equals("Y")'>
			AND (
				a.work_status_code LIKE 'VACATION%'
				AND a.work_status_code NOT IN( 'VACATION_MORNING', 'VACATION_AFTERNOON' )
			)
		</if>
		<if test='notStartWorkYn != null and notStartWorkYn.equals("Y")'>
			AND (
				start_work_date IS NULL
				AND a.work_status_code NOT IN (
					'VACATION_YEAR', 'VACATION_NATION', 'VACATION_REPLACE', 'VACATION_CON',
					'VACATION_PRIZE', 'VACATION_BABY', 'VACATION_CARE', 'VACATION_NORMAL', 'VACATION_ETC'
				)
			)
		</if>
		<if test='notOutWorkYn != null and notOutWorkYn.equals("Y")'>
			AND (
				out_work_date IS NULL
				AND a.work_status_code NOT IN (
					'VACATION_YEAR', 'VACATION_NATION', 'VACATION_REPLACE', 'VACATION_CON',
					'VACATION_PRIZE', 'VACATION_BABY', 'VACATION_CARE', 'VACATION_NORMAL', 'VACATION_ETC'
				)
			)
		</if>
		<if test='searchMonthStr != null and !searchMonthStr.equals("")'>
			AND substring(a.base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
		</if>
		<if test='startDateStr != null and !startDateStr.equals("")'>
			AND a.base_date_str <![CDATA[ >= ]]> #{startDateStr}
		</if>
		<if test='endDateStr != null and !endDateStr.equals("")'>
			AND a.base_date_str <![CDATA[ <= ]]> #{endDateStr}
		</if>
		<if test='childDeptIdList != null and childDeptIdList.size != 0'>
			AND d.dept_key IN
			<foreach item="item" index="index" collection="childDeptIdList"
					 open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test='workTimeKind != null and !workTimeKind.equals("")'>
			<!-- 8시간 미만 (LESS) -->
			<if test='workTimeKind.equals("LESS")'>
				AND worked_time_value <![CDATA[ < ]]> 8
			</if>
			<!-- 8시간 초과(GREATER) -->
			<if test='workTimeKind.equals("GREATER")'>
				AND worked_time_value <![CDATA[ >= ]]> 8
			</if>
		</if>
	</sql>

	<!-- 출퇴근 상세 조회 : 사용자ID 기준 -->
	<select id="selectCommuteInfoByUserId"
			parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO"
			resultType="com.yamdeng.template.vo.db.OfficeCommuteDayVO">
		SELECT
		<include refid="commute_select"/>
		FROM OFFICE_COMMUTE_DAY a
		<include refid="com.yamdeng.template.data.dao.CommonDao.user_common_join_table"/>
		WHERE a.BASE_DATE_STR = #{baseDateStr} AND a.user_id = #{userId}
	</select>

	<!-- 출근 -->
	<update id="startWork" parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO">
		UPDATE OFFICE_COMMUTE_DAY
		SET
			start_work_date = <include refid="com.yamdeng.template.data.dao.CommonDao.current_date_function"/>
			,start_work_ip = #{startWorkIp}
			,work_status_code = #{workStatusCode}
			,work_result_code = #{workResultCode}
			,mod_date = <include refid="com.yamdeng.template.data.dao.CommonDao.current_date_function"/>
			,mod_user_id = #{loginUserId}
		WHERE base_date_str = #{baseDateStr} and user_id = #{userId}
	</update>

	<!-- 퇴근 -->
	<update id="outWork" parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO">
		UPDATE OFFICE_COMMUTE_DAY
		SET
			out_work_date = <include refid="com.yamdeng.template.data.dao.CommonDao.current_date_function"/>
			,out_work_ip = #{outWorkIp}
			,work_status_code = #{workStatusCode}
			,work_result_code = #{workResultCode}
			,worked_time_value = #{workedTimeValue}
			,mod_date = <include refid="com.yamdeng.template.data.dao.CommonDao.current_date_function"/>
			,mod_user_id = #{loginUserId}
		WHERE base_date_str = #{baseDateStr} and user_id = #{userId}
	</update>

	<!-- 출퇴근 목록 조회 : 부서키 기준 -->
	<select id="selectCommuteListByDeptKey"
			parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO"
			resultType="com.yamdeng.template.vo.db.OfficeCommuteDayVO">
		SELECT
		<include refid="commute_select"/>
		FROM OFFICE_COMMUTE_DAY a
		<include refid="com.yamdeng.template.data.dao.CommonDao.user_common_join_table"/>
		WHERE a.BASE_DATE_STR = #{baseDateStr} AND d.dept_key = #{deptKey}
	</select>

	<!-- 춭/퇴근 대상 직원 목록 -->
	<select id="selectCommuteTargetUserList"
			parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO"
			resultType="com.yamdeng.template.vo.common.BaseCommonVO">
		SELECT
			u.user_id as user_id
		<include refid="com.yamdeng.template.data.dao.CommonDao.user_common_select"/>
		FROM TO0_USER_MAIN u
			left outer join TO0_DEPT_MAST d
			on u.dept_key = d.dept_key
			left outer join TO0_RANK_MAIN r
			on u.rank_key = r.rank_key
			left outer join TO0_DUTY_MAIN du
			on u.duty_key = du.duty_key
			left outer join TO0_POSITION_MAIN po
			on u.position_key = po.position_key
		WHERE r.rank_title not in('대표이사', '실장')
	</select>

	<!-- 출퇴근_일일 insert -->
	<insert id="insertCommute" parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO">
		INSERT INTO office_commute_day (
			base_date_str
			,user_id
			<if test='startWorkDate != null and !startWorkDate.equals("")'>
				,start_work_date
			</if>
			<if test='outWorkDate != null and !outWorkDate.equals("")'>
				,out_work_date
			</if>
			<if test='finalStartWorkDate != null and !finalStartWorkDate.equals("")'>
				,final_start_work_date
			</if>
			<if test='finalOutWorkDate != null and !finalOutWorkDate.equals("")'>
				,final_out_work_date
			</if>
			<if test='startWorkIp != null and !startWorkIp.equals("")'>
				,start_work_ip
			</if>
			<if test='outWorkIp != null and !outWorkIp.equals("")'>
				,out_work_ip
			</if>
			<if test='outsideWorkYn != null and !outsideWorkYn.equals("")'>
				,outside_work_yn
			</if>
			<if test='workStatusCode != null and !workStatusCode.equals("")'>
				,work_status_code
			</if>
			<if test='workResultCode != null and !workResultCode.equals("")'>
				,work_result_code
			</if>
			<if test='vacationKindCode != null and !vacationKindCode.equals("")'>
				,vacation_kind_code
			</if>
			<if test='etcDescription != null and !etcDescription.equals("")'>
				,etc_description
			</if>
			<if test='modYn != null and !modYn.equals("")'>
				,mod_yn
			</if>
			<if test='tardyYn != null and !tardyYn.equals("")'>
				,tardy_yn
			</if>
			<if test='workedTimeValue != null and !workedTimeValue.equals("")'>
				,worked_time_value
			</if>
			<if test='regDate != null and !regDate.equals("")'>
				,reg_date
			</if>
			<if test='modDate != null and !modDate.equals("")'>
				,mod_date
			</if>
			<if test='regUserId != null and !regUserId.equals("")'>
				,reg_user_id
			</if>
			<if test='modUserId != null and !modUserId.equals("")'>
				,mod_user_id
			</if>
		) VALUES (
			#{baseDateStr}
			,#{userId}
			<if test='startWorkDate != null and !startWorkDate.equals("")'>
				,#{startWorkDate}
			</if>
			<if test='outWorkDate != null and !outWorkDate.equals("")'>
				,#{outWorkDate}
			</if>
			<if test='finalStartWorkDate != null and !finalStartWorkDate.equals("")'>
				,#{finalStartWorkDate}
			</if>
			<if test='finalOutWorkDate != null and !finalOutWorkDate.equals("")'>
				,#{finalOutWorkDate}
			</if>
			<if test='startWorkIp != null and !startWorkIp.equals("")'>
				,#{startWorkIp}
			</if>
			<if test='outWorkIp != null and !outWorkIp.equals("")'>
				,#{outWorkIp}
			</if>
			<if test='outsideWorkYn != null and !outsideWorkYn.equals("")'>
				,#{outsideWorkYn}
			</if>
			<if test='workStatusCode != null and !workStatusCode.equals("")'>
				,#{workStatusCode}
			</if>
			<if test='workResultCode != null and !workResultCode.equals("")'>
				,#{workResultCode}
			</if>
			<if test='vacationKindCode != null and !vacationKindCode.equals("")'>
				,#{vacationKindCode}
			</if>
			<if test='etcDescription != null and !etcDescription.equals("")'>
				,#{etcDescription}
			</if>
			<if test='modYn != null and !modYn.equals("")'>
				,#{modYn}
			</if>
			<if test='tardyYn != null and !tardyYn.equals("")'>
				,#{tardyYn}
			</if>
			<if test='workedTimeValue != null and !workedTimeValue.equals("")'>
				,#{workedTimeValue}
			</if>
			<if test='regDate != null and !regDate.equals("")'>
				,#{regDate}
			</if>
			<if test='modDate != null and !modDate.equals("")'>
				,#{modDate}
			</if>
			<if test='regUserId != null and !regUserId.equals("")'>
				,#{regUserId}
			</if>
			<if test='modUserId != null and !modUserId.equals("")'>
				,#{modUserId}
			</if>
		)
	</insert>

	<!-- 출퇴근_일일 update -->
	<update id="updateCommute" parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO">
		UPDATE OFFICE_COMMUTE_DAY
		SET
			mod_date = <include refid="com.yamdeng.template.data.dao.CommonDao.current_date_function"/>
			<if test='startWorkDate != null and !startWorkDate.equals("")'>
				,start_work_date = #{startWorkDate}
			</if>
			<if test='outWorkDate != null and !outWorkDate.equals("")'>
				,out_work_date = #{outWorkDate}
			</if>
			<if test='finalStartWorkDate != null and !finalStartWorkDate.equals("")'>
				,final_start_work_date = #{finalStartWorkDate}
			</if>
			<if test='finalOutWorkDate != null and !finalOutWorkDate.equals("")'>
				,final_out_work_date = #{finalOutWorkDate}
			</if>
			<if test='startWorkIp != null and !startWorkIp.equals("")'>
				,start_work_ip = #{startWorkIp}
			</if>
			<if test='outWorkIp != null and !outWorkIp.equals("")'>
				,out_work_ip = #{outWorkIp}
			</if>
			<if test='outsideWorkYn != null and !outsideWorkYn.equals("")'>
				,outside_work_yn = #{outsideWorkYn}
			</if>
			<if test='workStatusCode != null and !workStatusCode.equals("")'>
				,work_status_code = #{workStatusCode}
			</if>
			<if test='workResultCode != null and !workResultCode.equals("")'>
				,work_result_code = #{workResultCode}
			</if>
			<if test='vacationKindCode != null and !vacationKindCode.equals("")'>
				,vacation_kind_code = #{vacationKindCode}
			</if>
			<if test='etcDescription != null and !etcDescription.equals("")'>
				,etc_description = #{etcDescription}
			</if>
			<if test='modYn != null and !modYn.equals("")'>
				,mod_yn = #{modYn}
			</if>
			<if test='tardyYn != null and !tardyYn.equals("")'>
				,tardy_yn = #{tardyYn}
			</if>
			<if test='workedTimeValue != null and !workedTimeValue.equals("")'>
				,worked_time_value = #{workedTimeValue}
			</if>
			<if test='modUserId != null and !modUserId.equals("")'>
				,mod_user_id = #{modUserId}
			</if>
		WHERE base_date_str = #{baseDateStr} AND user_id = #{userId}
	</update>

	<!-- 출퇴근 목록 조회 : 부서키 목록 기준  -->
	<select id="selectCommuteListByDeptIdList"
			parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO"
			resultType="com.yamdeng.template.vo.db.OfficeCommuteDayVO">
		SELECT
		<include refid="commute_select"/>
		FROM OFFICE_COMMUTE_DAY a
		<include refid="com.yamdeng.template.data.dao.CommonDao.user_common_join_table"/>
		WHERE a.BASE_DATE_STR = #{baseDateStr}
			AND d.dept_key IN
			<foreach item="item" index="index" collection="childDeptIdList"
					 open="(" separator="," close=")">
				#{item}
			</foreach>
	</select>

	<!-- {월} 출퇴근 현황 : 개인 -->
	<select id="selectCommuteStatsTypePrivate"
			parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO"
			resultType="com.yamdeng.template.vo.common.StatsCommonVO">
		SELECT 'tardy'   AS kind /* 지각 */
			,count(*) AS agg_count
		FROM   office_commute_day
		WHERE  user_id = #{userId}
			AND substring(base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
			AND tardy_yn = 'Y'
		UNION ALL
		SELECT 'not_start_work' AS kind /* 출근 미체크 */
			,count(*)        AS agg_count
		FROM   office_commute_day
		WHERE  user_id = #{userId}
			AND substring(base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
			AND start_work_date IS NULL
			AND work_status_code NOT IN (
				'VACATION_YEAR', 'VACATION_NATION', 'VACATION_REPLACE', 'VACATION_CON',
				'VACATION_PRIZE', 'VACATION_BABY', 'VACATION_CARE', 'VACATION_NORMAL', 'VACATION_ETC'
			)
		UNION ALL
		SELECT 'not_out_work' AS kind /* 퇴근 미체크 */
			,count(*)      AS agg_count
		FROM   office_commute_day
		WHERE  user_id = #{userId}
			AND substring(base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
			AND out_work_date IS NULL
			AND work_status_code NOT IN (
				'VACATION_YEAR', 'VACATION_NATION', 'VACATION_REPLACE', 'VACATION_CON',
				'VACATION_PRIZE', 'VACATION_BABY', 'VACATION_CARE', 'VACATION_NORMAL', 'VACATION_ETC'
			)
	</select>

	<!-- 일일_출퇴근 목록 : 공통 -->
	<select id="selectCommuteList"
			parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO"
			resultType="com.yamdeng.template.vo.db.OfficeCommuteDayVO">
		SELECT
		<include refid="commute_select"/>
		FROM OFFICE_COMMUTE_DAY a
		<include refid="com.yamdeng.template.data.dao.CommonDao.user_common_join_table"/>
		WHERE 1=1
		<include refid="commute_list_where"/>
		<include refid="com.yamdeng.template.data.dao.CommonDao.common_page_bottom"/>
	</select>

	<!-- 일일_출퇴근 목록 : 공통(total count) -->
	<select id="selectCommuteListTotalCount"
			parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO"
			resultType="java.lang.Integer">
		SELECT count(*)
		FROM OFFICE_COMMUTE_DAY a
		<include refid="com.yamdeng.template.data.dao.CommonDao.user_common_join_table"/>
		WHERE 1=1
		<include refid="commute_list_where"/>
	</select>

	<!-- {일} 팀원 출퇴근 현황 : 팀장, 실장 -->
	<select id="selectCommuteStatsDayTypeManager"
			parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO"
			resultType="com.yamdeng.template.vo.common.StatsCommonVO">
		SELECT 'ing'     AS kind /* 업무중 */
			,count(*) AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  a.base_date_str = #{baseDateStr}
			AND d.dept_key IN
			<foreach item="item" index="index" collection="childDeptIdList"
					 open="(" separator="," close=")">
				#{item}
			</foreach>
			AND a.work_status_code = 'ING'
		UNION ALL
		SELECT 'home_ing' AS kind /* 재택중 */
			,count(*)  AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  a.base_date_str = #{baseDateStr}
			AND d.dept_key IN
			<foreach item="item" index="index" collection="childDeptIdList"
					 open="(" separator="," close=")">
				#{item}
			</foreach>
			AND a.work_status_code = 'HOME_ING'
		UNION ALL
		SELECT 'vacation_morning' AS kind /* 오전반차 */
			,count(*)          AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  a.base_date_str = #{baseDateStr}
			AND d.dept_key IN
			<foreach item="item" index="index" collection="childDeptIdList"
					 open="(" separator="," close=")">
				#{item}
			</foreach>
			AND a.work_status_code = 'VACATION_MORNING'
		UNION ALL
		SELECT 'vacation_afternoon' AS kind /* 오후반차 */
			,count(*)            AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  a.base_date_str = #{baseDateStr}
			AND d.dept_key IN
			<foreach item="item" index="index" collection="childDeptIdList"
					 open="(" separator="," close=")">
				#{item}
			</foreach>
			AND a.work_status_code = 'VACATION_AFTERNOON'
		UNION ALL
		SELECT 'end'     AS kind /* 업무종료 */
			,count(*) AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  a.base_date_str = #{baseDateStr}
			AND d.dept_key IN
			<foreach item="item" index="index" collection="childDeptIdList"
					 open="(" separator="," close=")">
				#{item}
			</foreach>
			AND a.work_status_code = 'END'
		UNION ALL
		SELECT 'tardy'   AS kind /* 지각 */
			,count(*) AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  a.base_date_str = #{baseDateStr}
			AND d.dept_key IN
			<foreach item="item" index="index" collection="childDeptIdList"
					 open="(" separator="," close=")">
				#{item}
			</foreach>
			AND a.tardy_yn = 'Y'
		UNION ALL
		SELECT 'vacation' AS kind /* 휴가/휴직 */
			,count(*)  AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  a.base_date_str = #{baseDateStr}
			AND d.dept_key IN
			<foreach item="item" index="index" collection="childDeptIdList"
					 open="(" separator="," close=")">
				#{item}
			</foreach>
			AND ( a.work_status_code LIKE 'VACATION%'
					AND a.work_status_code NOT IN( 'VACATION_MORNING', 'VACATION_AFTERNOON' ) ) 
	</select>

	<!-- 부서 출퇴근 반영시 일일_출퇴근 테이블 제출여부 반영완료 -->
	<update id="completeDeptSubmit" parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO">
		UPDATE OFFICE_COMMUTE_DAY
		SET
			dept_submit_yn = 'Y'
			,mod_date = <include refid="com.yamdeng.template.data.dao.CommonDao.current_date_function"/>
			,mod_user_id = #{loginUserId}
		WHERE base_date_str = #{baseDateStr} and user_id = #{userId}
	</update>

	<!-- {월, 기간} 팀원 출퇴근 현황 : 팀장 -->
	<select id="selectCommuteStatsMonthTypeManager"
			parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO"
			resultType="com.yamdeng.template.vo.stats.OfficeCommuteDeyManagerStatsVO">
		SELECT u.user_key                                                                                AS user_key /* 사용자키 */
			,u.user_name                                                                              AS user_name /* 사용자명 */
			,u.dept_key                                                                               AS dept_key /* 부서키 */
			,u.rank_key                                                                               AS rank_key /* 직급명 */
			,u.duty_key                                                                               AS duty_key /* 직책키 */
			,u.mobile_tel /* 핸드폰번호 */
			,u.email /* 이메일 */
			,u.position_key                                                                           AS position_key /* 직위키 */
			,d.dept_name                                                                              AS dept_name /* 부서명 */
			,r.rank_title                                                                             AS rank_title /* 직급명 */
			,du.duty_title                                                                            AS duty_title /* 직책명 */
			,po.position_title                                                                        AS position_title /* 직위명 */
			,(SELECT count(*)
				FROM   office_commute_day
				WHERE  user_id = u.user_key
						<if test='searchMonthStr != null and !searchMonthStr.equals("")'>
							AND substring(base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
						</if>
						<if test='startDateStr != null and !startDateStr.equals("")'>
							AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
						</if>
						<if test='endDateStr != null and !endDateStr.equals("")'>
							AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
						</if>
						AND start_work_date IS NOT NULL
						AND tardy_yn = 'N')                                                              AS success_commute_count /* 정상출근 수 */
			,(SELECT count(*)
				FROM   office_commute_day
				WHERE  user_id = u.user_key
						<if test='searchMonthStr != null and !searchMonthStr.equals("")'>
							AND substring(base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
						</if>
						<if test='startDateStr != null and !startDateStr.equals("")'>
							AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
						</if>
						<if test='endDateStr != null and !endDateStr.equals("")'>
							AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
						</if>
						AND tardy_yn = 'Y')                                                              AS tardy_commute_count /* 지각 수 */
			,(SELECT count(*)
				FROM   office_commute_day
				WHERE  user_id = u.user_key
						<if test='searchMonthStr != null and !searchMonthStr.equals("")'>
							AND substring(base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
						</if>
						<if test='startDateStr != null and !startDateStr.equals("")'>
							AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
						</if>
						<if test='endDateStr != null and !endDateStr.equals("")'>
							AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
						</if>
						AND ( work_status_code LIKE 'VACATION%'
							AND work_status_code NOT IN( 'VACATION_MORNING', 'VACATION_AFTERNOON' ) )) AS vacation_count /* 휴가/휴직 수 */
		FROM   to0_user_main u
			LEFT OUTER JOIN to0_dept_mast d
							ON u.dept_key = d.dept_key
			LEFT OUTER JOIN to0_rank_main r
							ON u.rank_key = r.rank_key
			LEFT OUTER JOIN to0_duty_main du
							ON u.duty_key = du.duty_key
			LEFT OUTER JOIN to0_position_main po
							ON u.position_key = po.position_key
		WHERE  u.dept_key = #{deptKey}
	</select>

	<!-- {월, 기간} 팀원 출퇴근 현황 1 : 실장 -->
	<select id="selectCommuteSimpleStatsMonthTypeHeader"
			parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO"
			resultType="com.yamdeng.template.vo.common.StatsCommonVO">
		SELECT 'tardy'   AS kind /* 지각 */
			,count(*) AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  d.dept_key IN
			<foreach item="item" index="index" collection="childDeptIdList"
					 open="(" separator="," close=")">
				#{item}
			</foreach>
			AND a.tardy_yn = 'Y'
			<if test='searchMonthStr != null and !searchMonthStr.equals("")'>
				AND substring(a.base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
			</if>
			<if test='startDateStr != null and !startDateStr.equals("")'>
				AND a.base_date_str <![CDATA[ >= ]]> #{startDateStr}
			</if>
			<if test='endDateStr != null and !endDateStr.equals("")'>
				AND a.base_date_str <![CDATA[ <= ]]> #{endDateStr}
			</if>
		UNION ALL
		SELECT 'vacation' AS kind /* 휴가/휴직 */
			,count(*)  AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE d.dept_key IN
			<foreach item="item" index="index" collection="childDeptIdList"
					 open="(" separator="," close=")">
				#{item}
			</foreach>
			AND ( a.work_status_code LIKE 'VACATION%'
					AND a.work_status_code NOT IN( 'VACATION_MORNING', 'VACATION_AFTERNOON' ) )
			<if test='searchMonthStr != null and !searchMonthStr.equals("")'>
				AND substring(a.base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
			</if>
			<if test='startDateStr != null and !startDateStr.equals("")'>
				AND a.base_date_str <![CDATA[ >= ]]> #{startDateStr}
			</if>
			<if test='endDateStr != null and !endDateStr.equals("")'>
				AND a.base_date_str <![CDATA[ <= ]]> #{endDateStr}
			</if>
	</select>

	<!-- {월, 기간} 팀원 출퇴근 현황 2 : 실장 -->
	<select id="selectCommuteStatsMonthTypeHeader"
			parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO"
			resultType="com.yamdeng.template.vo.stats.OfficeCommuteDeyHeaderStatsVO">
		SELECT dept_key                                                           AS dept_key
			,dept_name                                                         AS dept_name
			,(SELECT count(*)
				FROM   office_commute_dept_day
				WHERE  dept_id = d.dept_key
						AND success_yn = 'Y'
						<if test='searchMonthStr != null and !searchMonthStr.equals("")'>
							AND substring(base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
						</if>
						<if test='startDateStr != null and !startDateStr.equals("")'>
							AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
						</if>
						<if test='endDateStr != null and !endDateStr.equals("")'>
							AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
						</if>) AS success_commute_count /* 정상출근 수 */
			,(SELECT sum(tardy_count)
				FROM   office_commute_dept_day
				WHERE  dept_id = d.dept_key
						<if test='searchMonthStr != null and !searchMonthStr.equals("")'>
							AND substring(base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
						</if>
						<if test='startDateStr != null and !startDateStr.equals("")'>
							AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
						</if>
						<if test='endDateStr != null and !endDateStr.equals("")'>
							AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
						</if>) AS tardy_commute_count /* 지각 수 */
			,(SELECT sum(vacation_count)
				FROM   office_commute_dept_day
				WHERE  dept_id = d.dept_key
						<if test='searchMonthStr != null and !searchMonthStr.equals("")'>
							AND substring(base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
						</if>
						<if test='startDateStr != null and !startDateStr.equals("")'>
							AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
						</if>
						<if test='endDateStr != null and !endDateStr.equals("")'>
							AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
						</if>) AS vacation_count /* 휴가 수 */
			,(SELECT avg(worked_time_value)
				FROM   office_commute_day a
						INNER JOIN to0_user_main u
								ON u.user_key = a.user_id
				WHERE  u.dept_key = d.dept_key
						<if test='searchMonthStr != null and !searchMonthStr.equals("")'>
							AND substring(base_date_str :: VARCHAR, 1, 6) = #{searchMonthStr}
						</if>
						<if test='startDateStr != null and !startDateStr.equals("")'>
							AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
						</if>
						<if test='endDateStr != null and !endDateStr.equals("")'>
							AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
						</if>) AS avg_worked_time_value /* 평균근무시간 */
		FROM   to0_dept_mast d
		WHERE  dept_key IN
			<foreach item="item" index="index" collection="childDeptIdList"
					 open="(" separator="," close=")">
				#{item}
			</foreach>
	</select>

	<!-- 전체 현황 : 하루, 기간 -->
	<select id="selectCommuteStatsDayTypeAdmin"
			parameterType="com.yamdeng.template.vo.db.OfficeCommuteDayVO"
			resultType="com.yamdeng.template.vo.common.StatsCommonVO">
		SELECT 'ing'     AS kind /* 업무중 */
			,count(*) AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  1=1
			<if test='searchDateStr != null and !searchDateStr.equals("")'>
				AND BASE_DATE_STR = #{searchDateStr}
			</if>
			<if test='startDateStr != null and !startDateStr.equals("")'>
				AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
			</if>
			<if test='endDateStr != null and !endDateStr.equals("")'>
				AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
			</if>
			AND a.work_status_code = 'ING'
		UNION ALL
		SELECT 'home_ing' AS kind /* 재택중 */
			,count(*)  AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  1=1
			<if test='searchDateStr != null and !searchDateStr.equals("")'>
				AND BASE_DATE_STR = #{searchDateStr}
			</if>
			<if test='startDateStr != null and !startDateStr.equals("")'>
				AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
			</if>
			<if test='endDateStr != null and !endDateStr.equals("")'>
				AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
			</if>
			AND a.work_status_code = 'HOME_ING'
		UNION ALL
		SELECT 'vacation_morning' AS kind /* 오전반차 */
			,count(*)          AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE 1=1
			<if test='searchDateStr != null and !searchDateStr.equals("")'>
				AND BASE_DATE_STR = #{searchDateStr}
			</if>
			<if test='startDateStr != null and !startDateStr.equals("")'>
				AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
			</if>
			<if test='endDateStr != null and !endDateStr.equals("")'>
				AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
			</if>
			AND a.work_status_code = 'VACATION_MORNING'
		UNION ALL
		SELECT 'vacation_afternoon' AS kind /* 오후반차 */
			,count(*)            AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  1=1
			<if test='searchDateStr != null and !searchDateStr.equals("")'>
				AND BASE_DATE_STR = #{searchDateStr}
			</if>
			<if test='startDateStr != null and !startDateStr.equals("")'>
				AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
			</if>
			<if test='endDateStr != null and !endDateStr.equals("")'>
				AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
			</if>
			AND a.work_status_code = 'VACATION_AFTERNOON'
		UNION ALL
		SELECT 'end'     AS kind /* 업무종료 */
			,count(*) AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  1=1
			<if test='searchDateStr != null and !searchDateStr.equals("")'>
				AND BASE_DATE_STR = #{searchDateStr}
			</if>
			<if test='startDateStr != null and !startDateStr.equals("")'>
				AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
			</if>
			<if test='endDateStr != null and !endDateStr.equals("")'>
				AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
			</if>
			AND a.work_status_code = 'END'
		UNION ALL
		SELECT 'tardy'   AS kind /* 지각 */
			,count(*) AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  1=1
			<if test='searchDateStr != null and !searchDateStr.equals("")'>
				AND BASE_DATE_STR = #{searchDateStr}
			</if>
			<if test='startDateStr != null and !startDateStr.equals("")'>
				AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
			</if>
			<if test='endDateStr != null and !endDateStr.equals("")'>
				AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
			</if>
			AND a.tardy_yn = 'Y'
		UNION ALL
		SELECT 'vacation' AS kind /* 휴가/휴직 */
			,count(*)  AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  1=1
			<if test='searchDateStr != null and !searchDateStr.equals("")'>
				AND BASE_DATE_STR = #{searchDateStr}
			</if>
			<if test='startDateStr != null and !startDateStr.equals("")'>
				AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
			</if>
			<if test='endDateStr != null and !endDateStr.equals("")'>
				AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
			</if>
			AND ( a.work_status_code LIKE 'VACATION%'
					AND a.work_status_code NOT IN( 'VACATION_MORNING', 'VACATION_AFTERNOON' ) )
		UNION ALL
		SELECT 'not_start_work'     AS kind /* 출근 미체크 */
			,count(*) AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE 1=1
			<if test='searchDateStr != null and !searchDateStr.equals("")'>
				AND BASE_DATE_STR = #{searchDateStr}
			</if>
			<if test='startDateStr != null and !startDateStr.equals("")'>
				AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
			</if>
			<if test='endDateStr != null and !endDateStr.equals("")'>
				AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
			</if>
			AND start_work_date IS NULL
			AND work_status_code NOT IN (
				'VACATION_YEAR', 'VACATION_NATION', 'VACATION_REPLACE', 'VACATION_CON',
				'VACATION_PRIZE', 'VACATION_BABY', 'VACATION_CARE', 'VACATION_NORMAL', 'VACATION_ETC'
			)
		UNION ALL
		SELECT 'not_out_work'     AS kind /* 퇴근 미체크 */
			,count(*) AS agg_count
		FROM   office_commute_day a
			INNER JOIN to0_user_main u
					ON u.user_key = a.user_id
			INNER JOIN to0_dept_mast d
					ON u.dept_key = d.dept_key
		WHERE  1=1
			<if test='searchDateStr != null and !searchDateStr.equals("")'>
				AND BASE_DATE_STR = #{searchDateStr}
			</if>
			<if test='startDateStr != null and !startDateStr.equals("")'>
				AND base_date_str <![CDATA[ >= ]]> #{startDateStr}
			</if>
			<if test='endDateStr != null and !endDateStr.equals("")'>
				AND base_date_str <![CDATA[ <= ]]> #{endDateStr}
			</if>
			AND out_work_date IS NULL
			AND work_status_code NOT IN (
				'VACATION_YEAR', 'VACATION_NATION', 'VACATION_REPLACE', 'VACATION_CON',
				'VACATION_PRIZE', 'VACATION_BABY', 'VACATION_CARE', 'VACATION_NORMAL', 'VACATION_ETC'
			)
	</select>

</mapper>